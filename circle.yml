# Copyright 2015, Google, Inc.
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use
# this file except in compliance with the License. You may obtain a copy of the
# License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable
# law or agreed to in writing, software distributed under the License is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and
# limitations under the License.

machine:
  environment:
    # Add app engine sdk to pythonpath for local unit tests.
    # PYTHONPATH: ${PYTHONPATH}:${HOME}/google_appengine

    # Replace this with your project ID
    GCLOUD_PROJECT: "battleaxe-staging"

dependencies:
  pre:
    # Download App Engine SDK
    # This is not necessary to deploy, its only necessary  to run local tests importing the App Engine SDK
    # - curl -o $HOME/google_appengine_1.9.30.zip https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.30.zip
    # - unzip -q -d $HOME $HOME/google_appengine_1.9.30.zip
    # Retrieve our secrets from the CircleCI environment
    # - echo $CLIENT_SECRET | base64 --decode > ${HOME}/client-secret.json
    - echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json

    # - echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > $GOOGLE_APPLICATION_CREDENTIALS

    # - cat ~/.bash_profile

    # - echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
    # - sed  s/YOUR-API-KEY/$API_KEY/ api_key.py.sample > api_key.py
    # vendor our dependencies
    # - mkdir -p lib
    # - pip install -r requirements.txt -t lib
    # Make sure gcloud is up to date
    # - echo ${HOME}/gcloud-service-key.json

    # - gcloud --quiet components update app

    - gcloud config set project $GCLOUD_PROJECT

    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update




    # try another way of authenticating
    # i think this is it
    # but it seems to open a browser always
    # - gcloud auth application-default login


    # http://stackoverflow.com/questions/25066461/how-to-get-gcloud-auth-activate-service-account-persist
    # - export CLOUDSDK_PYTHON_SITEPACKAGES=1

    # authenticate gcloud
    # - gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    # Replace <your-project-id>
    # - gcloud config set project $GCLOUD_PROJECT


# test:
  # override:
    # - gcloud --quiet components update app
    # authenticate gcloud
    # - gcloud auth activate-service-account --key-file ${HOME}/client-secret.json
    # Replace <your-project-id>
    # - gcloud config set project $GCLOUD_PROJECT

# test:
  # override:
    # run local unit tests
    # - python test_main.py

deployment:
    staging:
        branch: test/deployment-test
        commands:
        # deploy to AppEngine
        # - gcloud -q preview app deploy app.yaml --promote --version=1
        # https://circleci.com/docs/deploy-google-app-engine/
        # - sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json


        # and the last error was a billing account not set error
        # - sudo /opt/google-cloud-sdk/bin/gcloud config set project $GCLOUD_PROJECT
        - gcloud config set account app-engine@battleaxe-staging.iam.gserviceaccount.com

        - gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json

        - gcloud config set project $GCLOUD_PROJECT

        # - gcloud -q app deploy app.yaml --promote --version=staging
        - gcloud -q app deploy app.yaml
        # Run our E2E Test
        # - python e2e_test.py
        # Run our E2E Test
        # - python e2e_test.py